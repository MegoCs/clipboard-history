name: Development CI

on:
  push:
    branches: 
      - develop
      - feature/*
      - fix/*
  pull_request:
    branches: 
      - develop
      - master

permissions:
  contents: read
  pull-requests: read

env:
  CARGO_TERM_COLOR: always

jobs:
  quick_check:
    name: Quick Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Linux system dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends libxcb1-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev
      timeout-minutes: 3

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-dev-${{ hashFiles('**/Cargo.lock') }}

    - name: Format check
      run: cargo fmt --check

    - name: Clippy check
      run: cargo clippy -- -D warnings

    - name: Build check
      run: cargo check --verbose

    - name: Run tests
      run: cargo test --verbose
      timeout-minutes: 3

  cross_platform_test:
    name: Cross-Platform Compatibility
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    needs: quick_check
    if: github.event_name == 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Linux system dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends libxcb1-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev
      timeout-minutes: 3

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build project
      run: cargo build --verbose
      timeout-minutes: 8

    - name: Run tests
      run: cargo test --verbose
      timeout-minutes: 5

  security_check:
    name: Security Audit (Dev)
    runs-on: ubuntu-latest
    timeout-minutes: 8
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run security audit
      run: cargo audit
